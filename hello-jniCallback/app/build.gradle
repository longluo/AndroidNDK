plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    namespace 'me.longluo.hellojnicallback'

    defaultConfig {
        applicationId 'me.longluo.hellojnicallback'
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
    }

    ndkVersion '25.1.8937393'

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildTypes {

        debug {
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false

            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name': 'JNI Debug Version'
            ])

            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }

        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false

            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name': '@string/app_name'
            ])

            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}
